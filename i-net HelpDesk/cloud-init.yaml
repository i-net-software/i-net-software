#cloud-config
packages:
  - fail2ban
  - ufw
  - nmap
  - duply
  - rush
  - ipcalc
package_update: true
package_upgrade: true
write_files:
  # Pre-Backup File, export the database
  - content: |
      #!/bin/bash
      docker exec i-net-helpdesk-mariadb-1 mariadb-dump --hex-blob -pinet inetHDOfficial 2>/dev/null | gzip > /srv/i-net-helpdesk/i-net-helpdesk.sql.$(date '+%F').gz
    path: /root/.duply/backup/pre
  # Post-Backup File, remove the database backup
  - content: |
      #!/bin/bash
      rm /srv/i-net-helpdesk/i-net-helpdesk.sql.$(date '+%F').gz
      chown -R inetbackup:backup /srv/backup/*
    path: /root/.duply/backup/post
  # Configuration, what to include in the backup
  - content: |
      - /srv/i-net-helpdesk/mariadb
      - /srv/i-net-helpdesk/persistence/.*
      - /srv/i-net-helpdesk/persistence/publicBackup
      + /srv/i-net-helpdesk
      - **
    path: /root/.duply/backup/exclude
  # Configuration of duply
  - content: |
      GPG_KEY='<TODO>'
      GPG_PW='<TODO>'
      TARGET='file:///srv/backup'
      SOURCE='/'
      MAX_AGE=10D
      MAX_FULLBKP_AGE=1W
      MAX_FULL_BACKUPS=2
      MAX_FULLS_WITH_INCR=2
      DUPL_PARAMS="$DUPL_PARAMS --full-if-older-than $MAX_FULLBKP_AGE "
    path: /root/.duply/backup/conf
  # duply crontab
  - content: |
      # Create a full Backup on first of month
      0 0 1 * * root : Full backup ; /usr/bin/duply /root/.duply/backup pre_full_verify_purge_post --force
      1 0 * * * root : Daily incremental backup ; /usr/bin/duply /root/.duply/backup backup
      0 2 * * 0 root : Purge old backups every week ; /usr/bin/duply /root/.duply/backup purgeAuto --force
    path: /etc/cron.d/duply
  - content: |
      rush 2.0
      global
        debug 1
      ######################
      rule default
        acct on
        limits T10 R20
        umask 0021
        keepenv USER LOGNAME HOME PATH SSH_ORIGINAL_COMMAND
        fall-through
      ######################
      rule rsync-backup
        match $uid >= 1000 && $command ~ "^/usr/bin/rrsync -ro /srv/backup$"
        umask 002
    path: /etc/rush.rc
runcmd:
  # Configure fail2Ban for unwanted logins
  - printf "[sshd]\nenabled = true\nbanaction = iptables-multiport\nport 522" > /etc/fail2ban/jail.local
  - systemctl enable fail2ban
  # Configure ufw to allow ssh only from VPC and HTTP/S from everywhere
  - ufw allow from 162.55.186.47 to any proto tcp port 522
  - ufw allow from 78.47.145.249 to any proto tcp port 522
  - ufw allow http
  - ufw allow https
  - ufw enable
  # Setup SSH to specific Port
  - sed -i -e '/^\(#\|\)Port/s/^.*$/Port 522/' /etc/ssh/sshd_config
  # Setup SSH to disable password authentication
  - sed -i -e '/^\(#\|\)PasswordAuthentication/s/^.*$/PasswordAuthentication no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)PubkeyAuthentication/s/^.*$/PubkeyAuthentication yes/' /etc/ssh/sshd_config
  # Setup SSH to disable remove certain capabilities
  - sed -i -e '/^\(#\|\)X11Forwarding/s/^.*$/X11Forwarding no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)AllowTcpForwarding/s/^.*$/AllowTcpForwarding no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)AllowAgentForwarding/s/^.*$/AllowAgentForwarding no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)AuthorizedKeysFile/s/^.*$/AuthorizedKeysFile .ssh\/authorized_keys/' /etc/ssh/sshd_config
  # Setup SSH to stop after 2 auth retries
  - sed -i -e '/^\(#\|\)MaxAuthTries/s/^.*$/MaxAuthTries 2/' /etc/ssh/sshd_config
  # Set timezone
  - timedatectl set-timezone Europe/Berlin
  - echo "Europe/Berlin" | sudo tee /etc/timezone
  # Setup Docker Container ensemble
  - mkdir -p /srv/i-net-helpdesk/persistence /srv/i-net-helpdesk/mariadb
  - chown -R 1000:1000 /srv/i-net-helpdesk
  - cd /srv/i-net-helpdesk
  - curl -fsSL "https://github.com/i-net-software/i-net-software/raw/main/i-net%20HelpDesk/docker-compose.yml" -o docker-compose.yml
  - docker compose up -d
  # Prepare backup user
  - addgroup --gid 1001 inetbackup
  - adduser --disabled-password --gecos 'Backup User' --uid 1001 --gid 1001 --shell /usr/sbin/rush inetbackup
  - sudo -u inetbackup mkdir -p /home/inetbackup/.ssh
  - chmod 750 /home/inetbackup/.ssh
  # Prepare the backup directory
  - chmod -R go-rwx /root/.duply
  - mkdir -p /srv/backup
  - chgrp inetbackup /srv/backup
  - chmod 750 /srv/backup
  # Prepare SSH system for backup user
  - printf "\n\nMatch User inetbackup\n\tForceCommand /usr/bin/rrsync -ro /srv/backup\n\tX11Forwarding no\n\tAllowTcpForwarding no\n\tAllowAgentForwarding no\n\tPermitTTY no\n" | tee -a /etc/ssh/sshd_config
  # Prepare GPG backup, see https://www.thomas-krenn.com/en/wiki/Backup_on_Linux_with_duply
  - echo -e "use-agent\npinentry-mode loopback" >> /root/.gnupg/gpg.conf
  - echo -e "allow-loopback-pinentry" >> /root/.gnupg/gpg-agent.conf
  - reboot
